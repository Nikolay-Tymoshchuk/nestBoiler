/**
 * Файл используется для настройки инструмента Commitlint, который проверяет сообщения коммитов на соответствие определенным правилам.
 * Это помогает поддерживать единый стиль сообщений коммитов в проекте, что делает историю изменений более читаемой и понятной.
 *
 * Для чего это нужно?
 *
 *   Единообразие:
 *      Поддержание единого стиля сообщений коммитов помогает всем участникам проекта легко понимать, какие изменения были внесены и почему.
 *   Автоматизация:
 *      Инструменты для автоматизации, такие как semantic-release, могут использовать формат сообщений Conventional Commits
 *      для автоматического определения версии и генерации заметок о выпуске (release notes).
 *   Читаемость:
 *      Единообразные и структурированные сообщения коммитов делают историю изменений более читаемой и понятной,
 *      что облегчает отладку и анализ изменений.
 */
module.exports = {
  /**
   * Пакет @commitlint/config-conventional содержит набор правил, основанных на Conventional Commits,
   * которые определяют формат сообщений коммитов. Эти правила включают:
   *   - Типы коммитов (например, feat, fix, docs, style, refactor, test, chore).
   *   - Структуру сообщения коммита (например, <type>(<scope>): <subject>).
   *   - Ограничения на длину заголовка и тела сообщения.
   */
  extends: ['@commitlint/config-conventional'],
};

/**
 * Пример сообщения коммита, соответствующего правилам Conventional Commits
 *
 *      feat(auth): add OAuth2 login
 *
 *      Added OAuth2 login functionality to the authentication module. This allows users to log in using their Google or Facebook accounts.
 *
 * В этом примере:
 *    feat(auth): add OAuth2 login — заголовок сообщения коммита,
 *    где feat — тип изменения, auth — область (scope), и add OAuth2 login — краткое описание.
 *
 * Далее идет тело сообщения, которое более подробно описывает изменения.
 */
